{"version":3,"sources":["webpack:///./src/pages/categories.js"],"names":["pageQuery","Categories","recipes","data","allMdx","edges","categoriesSet","Set","recipeMap","Map","forEach","recipeData","node","id","frontmatter","slug","categories","recipe","title","category","string","capitalisedCategory","charAt","toUpperCase","slice","add","recipesForCategory","get","push","set","orderedCategories","Array","from","sort","map","key","to"],"mappings":"2FAAA,8GAUA,IAgDaA,EAAS,aAiBPC,UAjEI,SAAC,GAAc,IACjBC,EADgB,EAAXC,KACYC,OAAxBC,MACFC,EAAgB,IAAIC,IACpBC,EAAY,IAAIC,IAEtBP,EAAQQ,SAAQ,YAA2B,IAAlBC,EAAiB,EAAvBC,KACTC,EAAoBF,EAApBE,GAAIC,EAAgBH,EAAhBG,YACJC,EAA4BD,EAA5BC,KAAMC,EAAsBF,EAAtBE,WACRC,EAAS,CAAEJ,KAAIE,OAAMG,MADSJ,EAAVI,OAG1BF,EAAWN,SAAQ,SAAAS,GACjB,IAfyBC,EAenBC,GAfmBD,EAeyBD,GAdxCG,OAAO,GAAGC,cAAgBH,EAAOI,MAAM,GAejDlB,EAAcmB,IAAIJ,GAElB,IAAIK,EAAqBlB,EAAUmB,IAAIN,GAEnCK,EACFA,EAAmBE,KAAKX,GAExBS,EAAqB,CAACT,GAGxBT,EAAUqB,IAAIR,EAAqBK,SAIvC,IAAMI,EAAoBC,MAAMC,KAAK1B,GAAe2B,OAEpD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGH,EAAkBI,KAAI,SAAAf,GAAQ,aAC7B,iCACE,4BAAKA,GACL,sCACGX,EAAUmB,IAAIR,UADjB,aACG,EAAyBe,KAAI,SAAAjB,GAAM,OAClC,wBAAIkB,IAAKlB,EAAOJ,IACd,kBAAC,OAAD,CAAMuB,GAAE,MAAQnB,EAAOF,MAASE,EAAOC","file":"component---src-pages-categories-js-f40c1331cc4bcc1471f3.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport { Container } from '../components/atoms';\nimport { Layout } from '../components/organisms';\nimport { Link } from 'gatsby';\n\nfunction capitaliseFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nconst Categories = ({ data }) => {\n  const { edges: recipes } = data.allMdx;\n  const categoriesSet = new Set();\n  const recipeMap = new Map();\n\n  recipes.forEach(({ node: recipeData }) => {\n    const { id, frontmatter } = recipeData;\n    const { slug, categories, title } = frontmatter;\n    const recipe = { id, slug, title };\n\n    categories.forEach(category => {\n      const capitalisedCategory = capitaliseFirstLetter(category);\n      categoriesSet.add(capitalisedCategory);\n\n      let recipesForCategory = recipeMap.get(capitalisedCategory);\n\n      if (recipesForCategory) {\n        recipesForCategory.push(recipe);\n      } else {\n        recipesForCategory = [recipe];\n      }\n\n      recipeMap.set(capitalisedCategory, recipesForCategory);\n    });\n  });\n\n  const orderedCategories = Array.from(categoriesSet).sort();\n\n  return (\n    <Layout>\n      <Container>\n        {orderedCategories.map(category => (\n          <section>\n            <h2>{category}</h2>\n            <ul>\n              {recipeMap.get(category)?.map(recipe => (\n                <li key={recipe.id}>\n                  <Link to={`../${recipe.slug}`}>{recipe.title}</Link>\n                </li>\n              ))}\n            </ul>\n          </section>\n        ))}\n      </Container>\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query categoriesQuery {\n    allMdx {\n      edges {\n        node {\n          id\n          frontmatter {\n            categories\n            slug\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Categories;\n"],"sourceRoot":""}